<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
       xsi:schemaLocation="http://www.springframework.org/schema/data/elasticsearch http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="contextProvider" class="ch.alv.components.core.spring.ApplicationContextProvider"/>

    <bean id="queryFactory" class="ch.alv.components.data.query.DefaultQueryFactory" />

    <bean class="ch.alv.components.data.mock.MockElasticsearchQueryProvider"/>

    <bean id="adapter" class="ch.alv.components.data.adapter.ElasticsearchDataStoreAdapter">
        <constructor-arg index="0" ref="elasticsearchTemplate" />
        <constructor-arg index="1" ref="queryFactory" />
    </bean>

    <!-- use a sandbox node -->
     <elasticsearch:node-client id="client" local="true"/>

    <bean name="elasticsearchTemplate" class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
        <constructor-arg name="client" ref="client"/>
    </bean>


</beans>